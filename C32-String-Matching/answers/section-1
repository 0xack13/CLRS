32.1-1:
	It's a very simple problem,so let's ignore it.

32.1-2:
	If p[i] dismatch T[j],next time trace back to j+1;That is,compare from p[0] and T[j+1].

32.1-3:
	It's a probability problem.
	assume we have to compare (n-m+1) times.
						a(n)	b(n)
	each time: compare  1	1-1/d
						2	1/d*(1-1/d)
						3	(1/d)^2*(1-1/d)
						...	...
						m	(1/d)^(m-1)*(1-1/d)
	then wo can get the T(time) = (n-m+1)*[a(1)*b(1)+a(2)*b(2)+,,,+a(m)*b(m)] 
	So we get the answer.

32.1-4:
	To determine if a pattern P with gap characters exists in T partition P into substrings P1 , . . . , Pk determined by the gap characters. Search for P1 and if found continue searching for P2 and so on. This clearly find a pattern if one exists.

